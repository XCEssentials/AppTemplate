# Customise this file, documentation can be found here:
# https://github.com/KrauseFx/fastlane/tree/master/docs
# All available actions: https://github.com/KrauseFx/fastlane/blob/master/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# More information about multiple platforms in fastlane: https://github.com/KrauseFx/fastlane/blob/master/docs/Platforms.md
# All available actions: https://github.com/KrauseFx/fastlane/blob/master/docs/Actions.md

# By default, fastlane will send which actions are used
# No personal data is shared, more information on https://github.com/fastlane/enhancer
# Uncomment the following line to opt out
# opt_out_usage

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version '2.100.0'

lane :beforeRelease do

    ensure_git_branch(
        branch: '(release/*|hotfix/*)'
    )

    ensure_git_status_clean

    # === Read current version number

    versionNumber = version_get_podspec(
        path: 'AppTemplate.podspec'
    )

    puts 'Current VERSION number: ' + versionNumber

    # === Infer new version number

    defaultNewVersion = git_branch.split('/').last

    # === Define new version & build number

    useInferredNEWVersionNumber = prompt(
        text: 'Proceed with inferred NEW version number (' + defaultNewVersion + ')?',
        boolean: true
    )

    if useInferredNEWVersionNumber

        newVersionNumber = defaultNewVersion

    else

        newVersionNumber = prompt(
            text: 'New VERSION number:'
        )

    end

    newBuildNumber = number_of_commits.to_s

    # === Apply NEW version & build number

    increment_version_number(
        xcodeproj: 'AppTemplate.xcodeproj',
        version_number: newVersionNumber
    )

    increment_build_number(
        xcodeproj: 'AppTemplate.xcodeproj',
        build_number: newBuildNumber
    )

    version_bump_podspec(
        path: 'AppTemplate.podspec',
        version_number: newVersionNumber
    )

    version_bump_podspec(
        path: 'MobileViews.podspec',
        version_number: newVersionNumber
    )

    version_bump_podspec(
        path: 'ViewModels.podspec',
        version_number: newVersionNumber
    )

    version_bump_podspec(
        path: 'Models.podspec',
        version_number: newVersionNumber
    )

    version_bump_podspec(
        path: 'Services.podspec',
        version_number: newVersionNumber
    )

    # ===

    commit_version_bump(
        message: 'Version Bump to ' + newVersionNumber + ' (' + newBuildNumber + ')',
        xcodeproj: 'AppTemplate.xcodeproj',
        include: ["AppTemplate.podspec", "MobileViews.podspec", "ViewModels.podspec", "Models.podspec", "Services.podspec"]
    )

end # lane :beforeRelease

lane :reconfigureProject do

    # === Re-integrate dependencies

    # default initial location for any command
    # is inside 'Fastlane' folder

    sh 'cd ./.. && bundle exec pod install'

    # === Sort all project entries

    # default initial location for any command
    # is inside 'Fastlane' folder

    sh 'cd ./.. && bundle exec xcodeproj sort "AppTemplate.xcodeproj"'

    # === Build Phase Script - SwiftLint | 'AppTemplateMobile' | ./../AppTemplate.xcodeproj

    begin

        project = Xcodeproj::Project.open("./../AppTemplate.xcodeproj")

    rescue => ex

        # https://github.com/fastlane/fastlane/issues/7944#issuecomment-274232674
        UI.error ex
        UI.error("Failed to add Build Phase Script - SwiftLint | 'AppTemplateMobile' | ./../AppTemplate.xcodeproj")

    end

    project
        .targets
        .select{ |t| ['AppTemplateMobile'].include?(t.name) }
        .each{ |t|

            thePhase = t.shell_script_build_phases.find { |s| s.name == "SwiftLint" }

            unless thePhase.nil?
                t.build_phases.delete(thePhase)
            end

            thePhase = t.new_shell_script_build_phase("SwiftLint")
            thePhase.shell_script = '"Pods/SwiftLint/swiftlint" --path "${SRCROOT}/Sources/AppTemplateMobile"'
            # thePhase.run_only_for_deployment_postprocessing = ...

            t.build_phases.unshift(t.build_phases.delete(thePhase)) # move to top

        }

    project.save()

    UI.success("Added Build Phase Script - SwiftLint | 'AppTemplateMobile' | ./../AppTemplate.xcodeproj")

    # === Build Settings | ./../AppTemplate.xcodeproj

    begin

        project = Xcodeproj::Project.open("./../AppTemplate.xcodeproj")

    rescue => ex

        # https://github.com/fastlane/fastlane/issues/7944#issuecomment-274232674
        UI.error ex
        UI.error("Failed to set Build Settings - ./../AppTemplate.xcodeproj")

    end

    project.build_configurations.each do |config|

        config.build_settings['ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES'] = 'YES'
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '9.0'
        config.build_settings['LD_RUNPATH_SEARCH_PATHS'] = '$(FRAMEWORK_SEARCH_PATHS) $(BUILT_PRODUCTS_DIR)'
        config.build_settings['SWIFT_VERSION'] = 'Setting(key: "SWIFT_VERSION", value: "4.2")'
        config.build_settings['TARGETED_DEVICE_FAMILY'] = '1'

    end # project.build_configurations.each

    project.save()

    UI.success("Set Build Settings - ./../AppTemplate.xcodeproj")

    # === Build Settings | AppTemplateMobile | ./../AppTemplate.xcodeproj

    begin

        project = Xcodeproj::Project.open("./../AppTemplate.xcodeproj")

    rescue => ex

        # https://github.com/fastlane/fastlane/issues/7944#issuecomment-274232674
        UI.error ex
        UI.error("Failed to set Build Settings - AppTemplateMobile | ./../AppTemplate.xcodeproj")

    end

    begin

        target = project.targets.find { |e| e.name == "AppTemplateMobile" }
        raise RuntimeError, 'Target AppTemplateMobile is not found' if target.nil?

    rescue => ex

        # https://github.com/fastlane/fastlane/issues/7944#issuecomment-274232674
        UI.error ex
        UI.error("Failed to set Build Settings - AppTemplateMobile | ./../AppTemplate.xcodeproj")

    end

    target.build_configurations.each do |config|

        config.build_settings['CODE_SIGN_STYLE'] = 'Manual'
        config.build_settings['INFOPLIST_FILE'] = 'Info/AppTemplateMobile.plist'
        config.build_settings['PRODUCT_NAME'] = 'AppTemplateAppTemplateMobile'

        if config.name == "Debug"

            config.build_settings['CODE_SIGN_IDENTITY'] = 'iPhone Developer'
            config.build_settings['PROVISIONING_PROFILE_SPECIFIER'] = 'AppTemplate-Dev'

        end # config.name == "Debug"

        if config.name == "Release"

            config.build_settings['CODE_SIGN_IDENTITY'] = 'iPhone Distribution'
            config.build_settings['PROVISIONING_PROFILE_SPECIFIER'] = 'AppTemplate-AdHoc'

        end # config.name == "Release"

    end # target.build_configurations.each

    project.save()

    UI.success("Set Build Settings - AppTemplateMobile | ./../AppTemplate.xcodeproj")

end # lane :reconfigureProject